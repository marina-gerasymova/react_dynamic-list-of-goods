{"version":3,"sources":["api/goods.js","components/GoodList/GoodList.js","App.js","index.js"],"names":["getAll","fetch","then","response","json","GoodList","goods","className","map","good","key","id","style","color","name","App","useState","setGoods","classNmae","type","onClick","a","data","sort","b","localeCompare","sortedData","splice","filter","item","ReactDOM","render","document","getElementById"],"mappings":"0QAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,MAGxB,ICJDC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACf,wBAAIC,UAAU,WACXD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EAAKE,GACVC,MAAO,CAAEC,MAAM,GAAD,OAAKJ,EAAKI,QACxBN,UAAS,mBAAcE,EAAKI,OAAS,GAA5B,oBAERJ,EAAKK,WCsCCC,EAzCH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTV,EADS,KACFW,EADE,KAGhB,OACE,yBAAKV,UAAU,OACb,wBAAIW,UAAU,aAAd,yBACA,yBAAKX,UAAU,oBACb,kBAAC,EAAD,CACED,MAAOA,EACPC,UAAU,gBAEZ,yBAAKA,UAAU,iBACb,4BACEY,KAAK,SACLZ,UAAU,oBACVa,QAAO,sBAAE,sBAAAC,EAAA,kEAAWJ,EAAX,SAA0BjB,IAA1B,wGAHX,kBAQA,4BACEmB,KAAK,SACLZ,UAAU,oBACVa,QAAO,sBAAE,sBAAAC,EAAA,kEAAWJ,EAAX,SFxBUjB,IAC5BE,MAAK,SAAAoB,GAAI,OAAIA,EAAKC,MAAK,SAACF,EAAGG,GAAJ,OAAUH,EAAEP,KAAKW,cAAcD,EAAEV,YACxDZ,MAAK,SAAAwB,GAAU,OAAIA,EAAWC,OAAO,EAAG,MEsBtB,wGAHX,sBAQA,4BACER,KAAK,SACLZ,UAAU,oBACVa,QAAO,sBAAE,sBAAAC,EAAA,kEAAWJ,EAAX,SF5BYjB,IAC9BE,MAAK,SAAAoB,GAAI,OAAIA,EAAKM,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKhB,YE2BpB,wGAHX,sB,MChCViB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.fb2e27d2.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => getAll()\n  .then(data => data.sort((a, b) => a.name.localeCompare(b.name)))\n  .then(sortedData => sortedData.splice(0, 5));\n\nexport const getRedGoods = () => getAll()\n  .then(data => data.filter(item => item.color === 'red'));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GoodList.scss';\n\nconst GoodList = ({ goods }) => (\n  <ul className=\"content\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        style={{ color: `${good.color}` }}\n        className={`content__${good.color || ''}  content__item`}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport { GoodList };\n","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodList } from './components/GoodList';\n// or\n// import * as goodsAPI from './api/goods';\n\nconst App = () => {\n  const [goods, setGoods] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <h1 classNmae=\"App__name\">Dynamic list of Goods</h1>\n      <div className=\"App__goods goods\">\n        <GoodList\n          goods={goods}\n          className=\"goods__list\"\n        />\n        <div className=\"goods__button\">\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={async() => setGoods(await getAll())}\n          >\n            Load all goods\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={async() => setGoods(await get5First())}\n          >\n            Load 5 first goods\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={async() => setGoods(await getRedGoods())}\n          >\n            Load red goods\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma/css/bulma.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}